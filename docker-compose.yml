services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.myresolver.acme.httpchallenge=true'
      - '--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.myresolver.acme.email=${APP_EMAIL}'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.traefik/acme.json:/letsencrypt/acme.json
    networks:
      - traefik

  app:
    build: .
    container_name: node-app
    restart: unless-stopped
    env_file: .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.rule=Host(`${APP_DOMAIN}`)'
      - 'traefik.http.routers.app.entrypoints=websecure'
      - 'traefik.http.routers.app.tls.certresolver=myresolver'
      - 'traefik.http.services.app.loadbalancer.server.port=${APP_PORT}'
    depends_on:
      - db
    networks:
      - traefik

  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.db-data:/var/lib/mysql
    ports:
      - '${DB_PORT}:3306'

volumes:
  db-data:

networks:
  traefik:
    driver: bridge
