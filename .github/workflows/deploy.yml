# .github/workflows/deploy.yml
name: Deploy Blue/Green to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      # Ensure scripts are checked out

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e # Exit main script block on failure

          # --- Define Core Variables ---
          export APP_DIR="/home/${{ secrets.EC2_USERNAME }}/app"
          export EC2_USERNAME="${{ secrets.EC2_USERNAME }}" # Pass username if needed inside scripts
          export REPO_NAME="${{ github.repository }}"      # Pass repo name for clone command
          export ENV_FILE="$APP_DIR/.env"
          export COMPOSE_FILE="$APP_DIR/docker-compose.yml"
          export TRAEFIK_DATA_DIR="$APP_DIR/traefik-data"
          export MARKER_FILE="$APP_DIR/active_color.txt"

          # --- Pass Secrets as Environment Variables for the scripts ---
          # These will be available to the scripts executed below
          export APP_DOMAIN="${{ secrets.APP_DOMAIN }}"
          export APP_EMAIL="${{ secrets.APP_EMAIL }}"
          export APP_PORT="${{ secrets.APP_PORT }}"
          export DB_NAME="${{ secrets.DB_NAME }}"
          export DB_USER="${{ secrets.DB_USER }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_ROOT_PASSWORD="${{ secrets.DB_ROOT_PASSWORD }}"
          export TRAEFIK_AUTH_USER_PASS="${{ secrets.TRAEFIK_AUTH_USER_PASS }}"
          export PIPEDRIVE_WEBHOOK_USER="${{ secrets.PIPEDRIVE_WEBHOOK_USER }}"
          export PIPEDRIVE_WEBHOOK_PASSWORD="${{ secrets.PIPEDRIVE_WEBHOOK_PASSWORD }}"

          # --- Get Path to Scripts ---
          # Assuming scripts are in .github/scripts/ relative to repo root
          # The checkout action puts the code in GITHUB_WORKSPACE
          # Adjust this path if you place scripts elsewhere
          SCRIPT_DIR="$APP_DIR/.github/scripts"

          # --- Execute Deployment Steps ---
          echo "Executing 01-prepare-env.sh..."
          bash "$SCRIPT_DIR/01-prepare-env.sh"

          # Load the determined colors from the temp files created by the script
          # These will be exported and available to subsequent scripts in this session
          export INACTIVE_COLOR=$(cat /tmp/inactive_color.txt)
          export ACTIVE_COLOR=$(cat /tmp/active_color.txt)
          # ACTIVE_PRIORITY and INACTIVE_PRIORITY were also exported within 01-prepare-env.sh

          echo "Executing 02-deploy-inactive.sh..."
          bash "$SCRIPT_DIR/02-deploy-inactive.sh"

          echo "Executing 03-switch-traffic.sh..."
          bash "$SCRIPT_DIR/03-switch-traffic.sh"

          echo "Executing 04-cleanup.sh (using previous active color: $ACTIVE_COLOR)..."
          bash "$SCRIPT_DIR/04-cleanup.sh" # Note: ACTIVE_COLOR here is the one *before* the switch

          echo "--- Deployment Script Execution Completed ---"


    - name: Verify Deployment
      if: success() # Only run if the deployment step succeeded
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e # Exit verify script block on failure

          # --- Define Core Variables for Verification ---
          export APP_DIR="/home/${{ secrets.EC2_USERNAME }}/app"
          export MARKER_FILE="$APP_DIR/active_color.txt"
          export ENV_FILE="$APP_DIR/.env"
          export COMPOSE_FILE="$APP_DIR/docker-compose.yml"
          export APP_DOMAIN="${{ secrets.APP_DOMAIN }}"

          # --- Get Path to Scripts ---
          SCRIPT_DIR="$APP_DIR/.github/scripts"

          # --- Execute Verification Script ---
          echo "Executing verify-deployment.sh..."
          bash "$SCRIPT_DIR/verify-deployment.sh"

          echo "--- Verification Script Execution Completed ---"