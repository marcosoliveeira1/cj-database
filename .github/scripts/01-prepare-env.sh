#!/bin/bash
set -e 

echo "--- Running: 01-prepare-env.sh ---"

echo "Current directory: $(pwd)"
if [[ "$(pwd)" != "$APP_DIR" ]]; then
  echo "ERROR: Script not running in expected directory '$APP_DIR'. Aborting."
  exit 1
fi

echo "--- 1. Preparing Deployment Directory (Sub-tasks) ---"

mkdir -p "$TRAEFIK_DATA_DIR"

if [ ! -f "$TRAEFIK_DATA_DIR/acme.json" ]; then
  echo "Creating initial acme.json with 600 permissions..."
  touch "$TRAEFIK_DATA_DIR/acme.json"
  chmod 600 "$TRAEFIK_DATA_DIR/acme.json"
fi

echo "--- 2. Determining Blue/Green Deployment Colors ---"
if [ ! -f "$MARKER_FILE" ]; then
  echo "blue" > "$MARKER_FILE"
fi
ACTIVE_COLOR=$(cat "$MARKER_FILE")

if [ "$ACTIVE_COLOR" == "blue" ]; then
  INACTIVE_COLOR="green"
  ACTIVE_PRIORITY=10
  INACTIVE_PRIORITY=5
else
  INACTIVE_COLOR="blue"
  ACTIVE_PRIORITY=10
  INACTIVE_PRIORITY=5
fi


export ACTIVE_COLOR
export INACTIVE_COLOR
export ACTIVE_PRIORITY
export INACTIVE_PRIORITY

echo "Current Active Color: $ACTIVE_COLOR (Priority: $ACTIVE_PRIORITY)"
echo "Deploying New Version To Inactive Color: $INACTIVE_COLOR (Priority: $INACTIVE_PRIORITY)"

echo "$INACTIVE_COLOR" > /tmp/inactive_color.txt
echo "$ACTIVE_COLOR" > /tmp/active_color.txt

echo "--- 4. Creating/Updating .env file ---"
echo "# Auto-generated by GitHub Actions $(date)" > "$ENV_FILE"
echo "APP_DOMAIN=$APP_DOMAIN" >> "$ENV_FILE"
echo "APP_EMAIL=$APP_EMAIL" >> "$ENV_FILE"
echo "APP_PORT=$APP_PORT" >> "$ENV_FILE"
echo "DB_HOST=db" >> "$ENV_FILE"
echo "DB_PORT=3306" >> "$ENV_FILE"
echo "DB_NAME=$DB_NAME" >> "$ENV_FILE"
echo "DB_USER=$DB_USER" >> "$ENV_FILE"
echo "DB_PASSWORD=$DB_PASSWORD" >> "$ENV_FILE"
echo "DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD" >> "$ENV_FILE"
echo "DATABASE_URL=mysql://$DB_USER:$DB_PASSWORD@db:3306/$DB_NAME" >> "$ENV_FILE"
echo "NODE_ENV=production" >> "$ENV_FILE"
echo "TRAEFIK_AUTH_USER_PASS=$TRAEFIK_AUTH_USER_PASS" >> "$ENV_FILE"
echo "PIPEDRIVE_WEBHOOK_USER=$PIPEDRIVE_WEBHOOK_USER" >> "$ENV_FILE"
echo "PIPEDRIVE_WEBHOOK_PASSWORD=$PIPEDRIVE_WEBHOOK_PASSWORD" >> "$ENV_FILE"
echo "PIPEDRIVE_API_TOKEN=$PIPEDRIVE_API_TOKEN" >> "$ENV_FILE"
echo "PIPEDRIVE_API_URL=$PIPEDRIVE_API_URL" >> "$ENV_FILE"
echo "REDIS_URL=$REDIS_URL" >> "$ENV_FILE"
echo "LOKI_URL=$LOKI_URL" >> "$ENV_FILE"
echo "LOKI_USERNAME=$LOKI_USERNAME" >> "$ENV_FILE"
echo "LOKI_PASSWORD=$LOKI_PASSWORD" >> "$ENV_FILE"

if [ "$ACTIVE_COLOR" == "blue" ]; then
  echo "BLUE_PRIORITY=$ACTIVE_PRIORITY" >> "$ENV_FILE"
  echo "GREEN_PRIORITY=$INACTIVE_PRIORITY" >> "$ENV_FILE"
else
  echo "BLUE_PRIORITY=$INACTIVE_PRIORITY" >> "$ENV_FILE"
  echo "GREEN_PRIORITY=$ACTIVE_PRIORITY" >> "$ENV_FILE"
fi
echo "Generated .env file with initial priorities."

echo "--- Finished: 01-prepare-env.sh ---"